<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.itcast.dao.CheckGroupDao">
    <resultMap id="baseResultMap" type="com.itcast.pojo.CheckGroup">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="code" property="code"/>
        <result column="helpCode" property="helpCode"/>
        <result column="sex" property="sex"/>
        <result column="remark" property="remark"/>
        <result column="attention" property="attention"/>
    </resultMap>
    <resultMap id="findByIdResultMap" type="com.itcast.pojo.CheckGroup"
               extends="baseResultMap">
        <!--检查组和检查项多对多的关系关联查询-->
         <collection property="checkItems" ofType="com.itcast.pojo.CheckItem"
         column="id" select="com.itcast.dao.CheckitemDao.findCheckItemById"
         ></collection>
    </resultMap>
    <sql id="baseColums">
        id, code,name,helpCode,sex,remark,attention
    </sql>

    <insert id="add" parameterType="com.itcast.pojo.CheckGroup">
        <!--通过mybatis框架提供的selectKey标签获得自增产生的ID值-->
       <!--resultType返回类型  order 先后顺序  keyProperty把取的值传给CheckGroup中的id-->
        <selectKey resultType="java.lang.Integer" order="AFTER" keyProperty="id">
            select LAST_INSERT_ID()
        </selectKey>
          insert into t_checkgroup(code,name,sex,helpCode,remark,attention)
          values
         (#{code,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{sex,jdbcType=CHAR},#{helpCode,jdbcType=VARCHAR},
         #{remark,jdbcType=VARCHAR},#{attention,jdbcType=VARCHAR})
    </insert>

<!--    &lt;!&ndash;设置检查组和检查项多对多的关系   1.公有方法的sql语句 &ndash;&gt;-->
<!--   <insert id="setCheckGroupAndCheckItem" parameterType="map">-->
<!--        insert into t_checkgroup_checkitem(checkgroup_id,checkitem_id)-->
<!--        values-->
<!--        (#{checkgroupId},#{checkitemId})-->
<!--    </insert>-->
    <!--私有方法的sql语句-->
    <insert id="setCheckGroupAndCheckItem" parameterType="map">
        insert into t_checkgroup_checkitem(checkgroup_id,checkitem_id)
        values
        <foreach collection="checkitemIds"  item="item"  separator=",">
            (#{checkgroupId},#{item})
        </foreach>
    </insert>

    <!--value就是传过来的值   可以用v啥的   随便取  例如test="v != null and v.length > 0" -->
    <select id="selectByCondition" parameterType="String" resultType="com.itcast.pojo.CheckGroup">
        select <include refid="baseColums" /> from t_checkgroup
        <if test="value != null and value.length > 0">
            where code = #{value} or name = #{value} or helpCode = #{value}
        </if>
    </select>

    <select id="findById" parameterType="int" resultType="com.itcast.pojo.CheckGroup">
        select <include refid="baseColums" /> from t_checkgroup where id=#{id};
    </select>

    <select id="findCheckItemIdsByCheckGroupId" parameterType="int" resultType="int">
        select checkitem_id from t_checkgroup_checkitem where checkgroup_id=#{id};
    </select>

    <update id="edit" parameterType="com.itcast.pojo.CheckGroup">
        update t_checkgroup
        <set>
            <if test="code != null">
                code = #{code},
            </if>
            <if test="name != null">
                name = #{name},
            </if>
            <if test="sex != null">
                sex = #{sex},
            </if>
            <if test="helpCode != null">
                helpCode = #{helpCode},
            </if>
            <if test="attention != null">
                attention = #{attention},
            </if>
            <if test="remark != null">
                remark = #{remark}
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteAssoication" parameterType="int">
        delete from t_checkgroup_checkitem where checkgroup_id=#{id};
    </delete>

    <delete id="deleteById" parameterType="int">
        delete  from t_checkgroup  where id=#{id};
    </delete>
    <select id="findAll" resultType="com.itcast.pojo.CheckGroup">
        select <include refid="baseColums" /> from t_checkgroup;
    </select>

    <!--根据套餐ID查询关联的套餐组-->
    <select id="findCheckGroupById" parameterType="int" resultMap="findByIdResultMap">
        select * from t_checkgroup where id in(select checkgroup_id from t_setmeal_checkgroup where setmeal_id=#{id})
    </select>
</mapper>